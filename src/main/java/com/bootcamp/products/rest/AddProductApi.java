/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.33).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.bootcamp.products.rest;

import com.bootcamp.products.models.ModelApiException;
import com.bootcamp.products.models.ProductsRequest;
import com.bootcamp.products.models.ProductsResponse;
import io.reactivex.rxjava3.core.Maybe;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-03-29T21:25:39.003Z[GMT]")
@Validated
public interface AddProductApi {

    @Operation(summary = "Agregar Productos", description = "## Acerca de la funcionalidad expuesta  Agrega productos de crédito y pasivos ", tags={ "add products" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "se obtuvo los productos disponibles con éxito.", content = @Content(mediaType = "application/stream+json", schema = @Schema(implementation = ProductsResponse.class))),
        
        @ApiResponse(responseCode = "400", description = "Los datos proporcionados en la solicitud no son válidos.", content = @Content(mediaType = "application/json;charset&#x3D;UTF-8", schema = @Schema(implementation = ModelApiException.class))),
        
        @ApiResponse(responseCode = "401", description = "No tiene autorización para acceder al recurso.", content = @Content(mediaType = "application/json;charset&#x3D;UTF-8", schema = @Schema(implementation = ModelApiException.class))),
        
        @ApiResponse(responseCode = "408", description = "No se pudo obtener respuesta del servidor.", content = @Content(mediaType = "application/json;charset&#x3D;UTF-8", schema = @Schema(implementation = ModelApiException.class))),
        
        @ApiResponse(responseCode = "412", description = "El dispositivo que realiza la operación no está registrado.", content = @Content(mediaType = "application/json;charset&#x3D;UTF-8", schema = @Schema(implementation = ModelApiException.class))),
        
        @ApiResponse(responseCode = "500", description = "Error interno no controlado.", content = @Content(mediaType = "application/json;charset&#x3D;UTF-8", schema = @Schema(implementation = ModelApiException.class))),
        
        @ApiResponse(responseCode = "503", description = "Service unavailable.", content = @Content(mediaType = "application/json;charset&#x3D;UTF-8", schema = @Schema(implementation = ModelApiException.class))) })
    @RequestMapping(value = "/add-product",
        produces = { "application/stream+json", "application/json", "application/json;charset=UTF-8" }, 
        consumes = { "application/json;charset=UTF-8" }, 
        method = RequestMethod.POST)
    Maybe<ResponseEntity<ProductsResponse>> addProducts(@Parameter(in = ParameterIn.HEADER, description = "Token de autorizacion" ,required=true,schema=@Schema()) @RequestHeader(value="Authorization", required=true) String authorization, @Parameter(in = ParameterIn.HEADER, description = "Este campo es un valor estandar ya existente y sera usado como identificador." ,required=true,schema=@Schema()) @RequestHeader(value="Request-ID", required=true) String requestID, @Parameter(in = ParameterIn.HEADER, description = "Codigo de la aplicacion  que invoca el servicio. Se debe usar    el codigo de 2 caracteres que tienen asignada las aplicaciones, puede ser    el canal." ,required=true,schema=@Schema()) @RequestHeader(value="app-code", required=true) String appCode, @Parameter(in = ParameterIn.HEADER, description = "Llave de Sesion: Identificador unico que permitira vincular todos los eventos relacionados a una sesion del usuario." ,required=true,schema=@Schema()) @RequestHeader(value="session-UID", required=true) String sessionUID, @Parameter(in = ParameterIn.DEFAULT, description = "Request para Productos.", required=true, schema=@Schema()) @Valid @RequestBody ProductsRequest body);

}

